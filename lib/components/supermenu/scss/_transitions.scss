
@import "~animate-scss/_bouncing-entrances/bounceIn";
@import "~animate-scss/_bouncing-entrances/bounceInUp";
@import "~animate-scss/_bouncing-entrances/bounceInDown";
@import "~animate-scss/_bouncing-entrances/bounceInLeft";
@import "~animate-scss/_bouncing-entrances/bounceInRight";

.bounce-up-enter-active, .bounceIn { @include bounceIn(); }

.bounce-up-enter-active, .bounceInUp { @include bounceInUp() }

.bounce-down-enter-active, .bounceInDown { @include bounceInDown() }

.bounce-left-enter-active, .bounceInLeft { @include bounceInLeft() }

.bounce-right-enter-active, .bounceInRight { @include bounceInRight() }

@import "~animate-scss/_bouncing-exits/bounceOut";
@import "~animate-scss/_bouncing-exits/bounceOutUp";
@import "~animate-scss/_bouncing-exits/bounceOutDown";
@import "~animate-scss/_bouncing-exits/bounceOutLeft";
@import "~animate-scss/_bouncing-exits/bounceOutRight";

.bounce-up-leave-active, .bounceOut { @include bounceOut() }

.bounce-up-leave-active, .bounceOutUp { @include bounceOutUp() }

.bounce-down-leave-active, .bounceOutDown { @include bounceOutDown() }

.bounce-left-leave-active, .bounceOutLeft { @include bounceOutLeft() }

.bounce-right-leave-active, .bounceOutRight { @include bounceOutRight() }

@import "~animate-scss/_fading-entrances/fadeIn";
@import "~animate-scss/_fading-exits/fadeOut";

.fade-enter-active, .fadeIn { @include fadeIn($countDefault, $durationDefault, 1s) }

.fade-leave-active, .fadeOut { @include fadeOut() }

@import "~animate-scss/_sliding-entrances/slideInUp";
@import "~animate-scss/_sliding-entrances/slideInDown";
@import "~animate-scss/_sliding-entrances/slideInLeft";
@import "~animate-scss/_sliding-entrances/slideInRight";

.slide-up-enter-active, .slideInUp { @include slideInUp() }

.slide-down-enter-active, .slideInDown { @include slideInDown() }

.slide-left-enter-active, .slideInLeft { @include slideInLeft() }

.slide-right-enter-active, .slideInRight { @include slideInRight() }

@import "~animate-scss/_sliding-exits/slideOutUp";
@import "~animate-scss/_sliding-exits/slideOutDown";
@import "~animate-scss/_sliding-exits/slideOutLeft";
@import "~animate-scss/_sliding-exits/slideOutRight";

.slide-up-leave-active, .slideOutUp { @include slideOutUp() }

.slide-down-leave-active, .slideOutDown { @include slideOutDown() }

.slide-left-leave-active, .slideOutLeft { @include slideOutLeft() }

.slide-right-leave-active, .slideOutRight { @include slideOutRight() }

//@import "transitions/maximize-entrances/maximizeInDown";
//@import "transitions/minimize-exists/minimizeOutUp";


@include keyframes(maximizeEnter) {
    0% {
        opacity: 0;
        max-height: 0;
    }
    100% {
        max-height: 2000px;
        opacity: 1;
    }
}

@mixin maximizeEnter($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
    @include animation-name(maximizeEnter);
    @include count($count);
    @include duration($duration);
    @include delay($delay);
    @include function($function);
    @include fill-mode($fill);
    @include visibility($visibility);
}


@include keyframes(maximizeLeave) {
    0% {
        opacity: 1;
        max-height: 2000px;
    }
    100% {
        opacity: 0;
        max-height: 0;
    }
}

@mixin maximizeLeave($count: $countDefault, $duration: $durationDefault, $delay: $delayDefault, $function: $functionDefault, $fill: $fillDefault, $visibility: $visibilityDefault) {
    @include animation-name(maximizeLeave);
    @include count($count);
    @include duration($duration);
    @include delay($delay);
    @include function($function);
    @include fill-mode($fill);
    @include visibility($visibility);
}


.maximize {
    // Starting state for enter. Added before element is inserted, removed one frame after element is inserted.
    &-enter {}
    // Active state for enter. Applied during the entire entering phase. Added before element is inserted, removed when transition/animation finishes.
    // This class can be used to define the duration, delay and easing curve for the entering transition.
    &-enter-active {}
    // Ending state for enter. Added one frame after element is inserted (at the same time v-enter is removed), removed when transition/animation finishes.
    &-enter-to {}

    // Starting state for leave. Added immediately when a leaving transition is triggered, removed after one frame.
    &-leave {}
    //  Active state for leave. Applied during the entire leaving phase. Added immediately when leave transition is triggered, removed when the transition/animation finishes.
    //  This class can be used to define the duration, delay and easing curve for the leaving transition.
    &-leave-active {}
    // Ending state for leave. Added one frame after a leaving transition is triggered (at the same time v-leave is removed), removed when the transition/animation finishes.
    &-leave-to {}
}




.maximize-down-enter-active, .maximizeInDown {
    overflow-y : hidden;
    @include maximizeInDown(1, 500ms, 0, ease-out)
}

.maximize-down-leave-active, .minimizeOutUp {
    overflow-y : hidden;
    @include minimizeOutUp(1, 500ms, 0, ease-in) // https://motion.ant.design/language/time
}

.slide-enter {
    opacity : 0;
}

.slide-enter-active {
    opacity : 1;
    @include slideInLeft($countDefault, $durationDefault, 1s);
}

.slide-leave {
}

.slide-leave-active {
    @include slideOutRight($countDefault, $durationDefault, 0s);
}
